{
    "collab_server" : "",
    "contents" : "library(xlsx)\nlibrary(shiny)\nlibrary(rdrop2)\nlibrary(lubridate)\nlibrary(digest)\nlibrary(plyr)\n\ntoken <- readRDS(\"droptoken.rds\")\n\noriginal_file_name <- \"pms_data.csv\"\nunique_name_fn <-\n  function() {\n    sprintf(\"%s_%s.csv\", digest::digest(paste0(as.integer(Sys.time(\n    )), runif(1))), \"user_downloaded\")\n  }\n\nsort_locals_by_date <- function() {\n  all_local_files <-\n    c(original_file_name, list.files()[grepl(pattern = \"user[_]downloaded\", list.files())])\n  all_local_files_mtime <-\n    unlist(lapply(all_local_files, function(x)\n      file.mtime(x)))\n  sort_locals_by_date <-\n    all_local_files[order(all_local_files_mtime)]\n  sort_locals_by_date\n}\n\nclear_downloaded_files <- function() {\n  if (sum(grepl(pattern = \"user[_]downloaded\", list.files())) > 5) {\n    sorted_files <- sort_locals_by_date()\n    sorted_files <-\n      sorted_files[grepl(pattern = \"user[_]downloaded\", sorted_files)]\n    lapply(sorted_files[1:3], function(x)\n      file.remove(x))\n  }\n}\n\nshinyServer(function(input, output) {\n  uk_prime_ministers <- eventReactive(input$update,\n                                      {\n                                        if (drop_exists('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)) {\n                                          if (any(grepl(pattern = \"user[_]downloaded\", list.files()))) {\n                                            ## there are updated files\n                                            ## Get modification times for local and external file\n                                            all_local_files <-\n                                              c(original_file_name, list.files()[grepl(pattern = \"user[_]downloaded\", list.files())])\n                                            all_local_files_mtime <-\n                                              unlist(lapply(all_local_files, function(x)\n                                                file.mtime(x)))\n                                            remote_file_mtime <-\n                                              dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)[1, modified])\n                                            \n                                            if (!any(all_local_files_mtime > as.integer(remote_file_mtime))) {\n                                              drop_get(\n                                                '/Private_Cache-Tests/UK_Prime_Ministers.csv',\n                                                local_file = unique_name_fn(),\n                                                overwrite = T,\n                                                dtoken = token\n                                              )\n                                              sorted_files <- sort_locals_by_date()\n                                              ## Import most recently updated file\n                                              data_to_use <-\n                                                read.csv(sorted_files[length(sorted_files)])\n                                              clear_downloaded_files()\n                                              data_to_use\n                                            } else {\n                                              sorted_files <- sort_locals_by_date()\n                                              ## Import most recently updated file\n                                              data_to_use <-\n                                                read.csv(sorted_files[length(sorted_files)])\n                                              data_to_use\n                                            }\n                                          } else {\n                                            ## first deploy, get file and import\n                                            drop_get(\n                                              '/Private_Cache-Tests/UK_Prime_Ministers.csv',\n                                              local_file = unique_name_fn(),\n                                              overwrite = T,\n                                              dtoken = token\n                                            )\n                                            sorted_files <- sort_locals_by_date()\n                                            ## Import most recently updated file\n                                            data_to_use <-\n                                              read.csv(sorted_files[length(sorted_files)])\n                                            clear_downloaded_files()\n                                            data_to_use\n                                          }\n                                        } else {\n                                          ## if external file does not exist\n                                          sorted_files <- sort_locals_by_date()\n                                          ## Import most recently updated file\n                                          data_to_use <- read.csv(sorted_files[length(sorted_files)])\n                                          data_to_use\n                                        }\n                                      },\n                                      ignoreNULL = FALSE)\n                                      #\n                                      # data_to_use <-\n                                      #   join_all(lapply(all_local_files, function(x) {\n                                      #     read.csv(x)\n                                      #   }),\n                                      #   match = \"all\",\n                                      #   type = \"right\")\n                                      # data_to_use <-\n                                      #   data_to_use[!duplicated(data_to_use),]\n                                      # data_to_use)\n                                      \n                                      output$summary <- renderDataTable({\n                                        uk_prime_ministers()\n                                      })\n                                      \n})",
    "created" : 1469096165541.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3982549513",
    "id" : "FE0DA0C9",
    "lastKnownWriteTime" : 1469105212,
    "last_content_update" : 1469105212215,
    "path" : "~/Github/Live-Data_Scripts-and-Templates/Repositories/Dropbox/Dropbox_Cache_Example/server.R",
    "project_path" : "Dropbox_Cache_Example/server.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}