drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = store_fname, overwrite = T)
all_local_files <- c(all_local_files, store_fname)
}
all_local_files <- c(local_file_name,list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
remote_file_mtime <- dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv')[1,modified])
if(any(as.integer(remote_file_mtime) > all_local_files_mtime)){
store_fname <- unique_name_fn()
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = store_fname, overwrite = T)
all_local_files <- c(all_local_files, store_fname)
}
any(as.integer(remote_file_mtime) > all_local_files_mtime)
all_local_files_mtime
as.integer(remote_file_mtime)
any(all_local_files_mtime < as.integer(remote_file_mtime))
all_local_files_mtime
as.integer(remote_file_mtime)
any(all_local_files_mtime > as.integer(remote_file_mtime))
local_file_name <- "pms_data.csv"
unique_name_fn <- function(){sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))), "user_downloaded")}
all_local_files <- c(local_file_name,list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
remote_file_mtime <- dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv')[1,modified])
all_local_files_mtime
as.integer(remote_file_mtime)
all_local_files_mtime
any(all_local_files_mtime > as.integer(remote_file_mtime))
any(all_local_files_mtime < as.integer(remote_file_mtime))
all_local_files_mtime
as.integer(remote_file_mtime)
all_local_files_mtime
any(all_local_files_mtime < as.integer(remote_file_mtime))
if(any(all_local_files_mtime < as.integer(remote_file_mtime))){
store_fname <- unique_name_fn()
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = store_fname, overwrite = T)
all_local_files <- c(all_local_files, store_fname)
}
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
all_local_files <- all_local_files[order(all_local_files_mtime)]
data_to_use <- join_all(lapply(all_local_files, function(x) {read.csv(x)}), match = "all", type = "right")
data_to_use <- data_to_use[!duplicated(data_to_use),]
data_to_use
local_file_name <- "pms_data.csv"
unique_name_fn <- function(){sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))), "user_downloaded")}
all_local_files <- c(local_file_name,list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
remote_file_mtime <- dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv')[1,modified])
all_local_files_mtime
as.integer(remote_file_mtime)
all_local_files_mtime
any(all_local_files_mtime < as.integer(remote_file_mtime))
any(all_local_files_mtime > as.integer(remote_file_mtime))
!any(all_local_files_mtime > as.integer(remote_file_mtime))
all_local_files_mtime
as.integer(remote_file_mtime)
all_local_files_mtime
if(!any(all_local_files_mtime > as.integer(remote_file_mtime))){
store_fname <- unique_name_fn()
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = store_fname, overwrite = T)
all_local_files <- c(all_local_files, store_fname)
}
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
all_local_files <- all_local_files[order(all_local_files_mtime)]
data_to_use <- join_all(lapply(all_local_files, function(x) {read.csv(x)}), match = "all", type = "right")
data_to_use <- data_to_use[!duplicated(data_to_use),]
data_to_use
local_file_name <- "pms_data.csv"
unique_name_fn <- function(){sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))), "user_downloaded")}
all_local_files <- c(local_file_name,list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
remote_file_mtime <- dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv')[1,modified])
all_local_files_mtime
as.integer(remote_file_mtime)
all_local_files_mtime
if(!any(all_local_files_mtime > as.integer(remote_file_mtime))){
store_fname <- unique_name_fn()
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = store_fname, overwrite = T)
all_local_files <- c(all_local_files, store_fname)
}
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
all_local_files <- all_local_files[order(all_local_files_mtime)]
data_to_use <- join_all(lapply(all_local_files, function(x) {read.csv(x)}), match = "all", type = "right")
data_to_use <- data_to_use[!duplicated(data_to_use),]
all_local_files <- c(local_file_name,list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
remote_file_mtime <- dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv')[1,modified])
all_local_files_mtime
as.integer(remote_file_mtime)
all_local_files_mtime
if(!any(all_local_files_mtime > as.integer(remote_file_mtime))){
store_fname <- unique_name_fn()
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = store_fname, overwrite = T)
all_local_files <- c(all_local_files, store_fname)
}
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
token
token <- drop_auth(new_user = TRUE)
library(rdrop2)
token <- drop_auth(new_user = TRUE)
saveRDS(token, "droptoken.rds")
token <- readRDS("droptoken.rds")
drop_acc(dtoken = token)
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
token <- readRDS("droptoken.rds")
drop_acc(dtoken = token)
library(rdrop2)
token <- readRDS("droptoken.rds")
drop_acc(dtoken = token)
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = "pms_data.csv")
library(rdrop2)
token <- readRDS("droptoken.rds")
drop_acc(dtoken = token)
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = "pms_data.csv", token)
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = "pms_data.csv", token)
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = "pms_data.csv", dtoken = token)
knitr::opts_chunk$set(echo = TRUE)
library(csv)
library(rdrop2)
token <- readRDS("droptoken.rds")
drop_acc(dtoken = token)
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = "pms_data.csv", dtoken = token)
library(csv)
str(read.csv("pms_data.csv"))
drop_get('/Private_Cache-Tests/non-existant.csv', local_file = "pms_data.csv", dtoken = token)
local_df <- data.frame("a" = c("c", "e", "f"),
"b" = c(1, 2, 3))
remote_df <- data.frame("a" = c("h","c", "e", "f"),
"b" = c(7,1, 2, 3))
remote_2_df <- data.frame("a" = c("h","c", "e", "f"),
"b" = c(7,1,88, 3))
write.csv(file = "local_file.csv", x = local_df, row.names = F)
write.csv(remote_df,sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))), "user_downloaded"),row.names = F)
write.csv(remote_2_df,sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))), "user_downloaded"),row.names = F)
user_downloaded_files <- list.files()[grepl(pattern = "user[_]downloaded", list.files())]
dates <- unlist(lapply(user_downloaded_files, function(x) file.mtime(x)))
user_downloaded_files[order(dates)]
lapply(c("local_file.csv", user_downloaded_files[order(dates)]), function(x) {
read.csv(x)
}) %>%
join_all(match = "all", type = "right") -> data_to_use
library(plyr)
lapply(c("local_file.csv", user_downloaded_files[order(dates)]), function(x) {
read.csv(x)
}) %>%
join_all(match = "all", type = "right") -> data_to_use
local_file_name <- "pms_data.csv"
unique_name_fn <- function(){sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))), "user_downloaded")}
all_local_files <- c(local_file_name,list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
remote_file_mtime <- dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)[1,modified])
library(lubridate)
all_local_files <- c(local_file_name,list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
remote_file_mtime <- dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)[1,modified])
if(!any(all_local_files_mtime > as.integer(remote_file_mtime))){
store_fname <- unique_name_fn()
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = store_fname, overwrite = T, dtoken = token)
all_local_files <- c(all_local_files, store_fname)
}
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
all_local_files <- all_local_files[order(all_local_files_mtime)]
data_to_use <- join_all(lapply(all_local_files, function(x) {read.csv(x)}), match = "all", type = "right")
data_to_use <- data_to_use[!duplicated(data_to_use),]
shiny::runApp()
runApp()
local_file_name <- "pms_data.csv"
unique_name_fn <- function(){sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))), "user_downloaded")}
all_local_files <- c(local_file_name,list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
remote_file_mtime <- dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv',token)[1,modified])
runApp()
runApp()
setwd("~/Github/Live-Data_Scripts-and-Templates/Repositories/Dropbox/unique-filename-shiny")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Github/Live-Data_Scripts-and-Templates/Repositories/Dropbox")
local_file_name <- "pms_data.csv"
unique_name_fn <- function(){sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))), "user_downloaded")}
library(lubridate)
all_local_files <- c(local_file_name,list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
remote_file_mtime <- dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)[1,modified])
token <- readRDS("droptoken.rds")
drop_acc(dtoken = token)
library(lubridate)
all_local_files <- c(local_file_name,list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
remote_file_mtime <- dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)[1,modified])
if(!any(all_local_files_mtime > as.integer(remote_file_mtime))){
store_fname <- unique_name_fn()
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = store_fname, overwrite = T, dtoken = token)
all_local_files <- c(all_local_files, store_fname)
}
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
all_local_files <- all_local_files[order(all_local_files_mtime)]
read.csv(all_local_files[length(all_local_files)])
library(lubridate)
all_local_files <- c(local_file_name,list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
remote_file_mtime <- dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)[1,modified])
if(!any(all_local_files_mtime > as.integer(remote_file_mtime))){
store_fname <- unique_name_fn()
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = store_fname, overwrite = T, dtoken = token)
all_local_files <- c(all_local_files, store_fname)
}
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
all_local_files <- all_local_files[order(all_local_files_mtime)]
read.csv(all_local_files[length(all_local_files)])
if(!any(all_local_files_mtime > as.integer(remote_file_mtime))){
store_fname <- unique_name_fn()
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = store_fname, overwrite = T, dtoken = token)
all_local_files <- c(all_local_files, store_fname)
}
all_local_files_mtime <- unlist(lapply(all_local_files, function(x) file.mtime(x)))
all_local_files <- all_local_files[order(all_local_files_mtime)]
read.csv(all_local_files[length(all_local_files)])
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
grepl(pattern = "user[_]downloaded", list.files())
any(grepl(pattern = "user[_]downloaded", list.files()))
any(grepl(pattern = "user[_]downloaded", list.files()))
drop_exists('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = store_fname, overwrite = T, dtoken = token)
drop_exists('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)
## Check file exists
if (drop_exists('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)) {
if (any(grepl(pattern = "user[_]downloaded", list.files()))) {
## there are updated files
## Get modification times for local and external file
all_local_files <-
c(original_file_name, list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <-
unlist(lapply(all_local_files, function(x)
file.mtime(x)))
remote_file_mtime <-
dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)[1, modified])
if (!any(all_local_files_mtime > as.integer(remote_file_mtime))) {
drop_get(
'/Private_Cache-Tests/UK_Prime_Ministers.csv',
local_file = store_fname,
overwrite = T,
dtoken = token
)
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <-
read.csv(sorted_files[length(sorted_files)])
} else {
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <-
read.csv(sorted_files[length(sorted_files)])
}
} else {
## first deploy, get file and import
drop_get(
'/Private_Cache-Tests/UK_Prime_Ministers.csv',
local_file = unique_name_fn(),
overwrite = T,
dtoken = token
)
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <-
read.csv(sorted_files[length(sorted_files)])
}
} else {
## if external file does not exist
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <- read.csv(sorted_files[length(sorted_files)])
}
sort_locals_by_date <- function() {
all_local_files <-
c(original_file_name, list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <-
unlist(lapply(all_local_files, function(x)
file.mtime(x)))
sort_locals_by_date <-
all_local_files[order(all_local_files_mtime)]
sort_locals_by_date
}
sort_locals_by_date <- function() {
all_local_files <-
c(original_file_name, list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <-
unlist(lapply(all_local_files, function(x)
file.mtime(x)))
sort_locals_by_date <-
all_local_files[order(all_local_files_mtime)]
sort_locals_by_date
}
## Check file exists
if (drop_exists('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)) {
if (any(grepl(pattern = "user[_]downloaded", list.files()))) {
## there are updated files
## Get modification times for local and external file
all_local_files <-
c(original_file_name, list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <-
unlist(lapply(all_local_files, function(x)
file.mtime(x)))
remote_file_mtime <-
dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)[1, modified])
if (!any(all_local_files_mtime > as.integer(remote_file_mtime))) {
drop_get(
'/Private_Cache-Tests/UK_Prime_Ministers.csv',
local_file = store_fname,
overwrite = T,
dtoken = token
)
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <-
read.csv(sorted_files[length(sorted_files)])
} else {
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <-
read.csv(sorted_files[length(sorted_files)])
}
} else {
## first deploy, get file and import
drop_get(
'/Private_Cache-Tests/UK_Prime_Ministers.csv',
local_file = unique_name_fn(),
overwrite = T,
dtoken = token
)
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <-
read.csv(sorted_files[length(sorted_files)])
}
} else {
## if external file does not exist
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <- read.csv(sorted_files[length(sorted_files)])
}
original_file_name <- "pms_data.csv"
unique_name_fn <- function(){sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))), "user_downloaded")}
sort_locals_by_date <- function() {
all_local_files <-
c(original_file_name, list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <-
unlist(lapply(all_local_files, function(x)
file.mtime(x)))
sort_locals_by_date <-
all_local_files[order(all_local_files_mtime)]
sort_locals_by_date
}
## Check file exists
if (drop_exists('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)) {
if (any(grepl(pattern = "user[_]downloaded", list.files()))) {
## there are updated files
## Get modification times for local and external file
all_local_files <-
c(original_file_name, list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <-
unlist(lapply(all_local_files, function(x)
file.mtime(x)))
remote_file_mtime <-
dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)[1, modified])
if (!any(all_local_files_mtime > as.integer(remote_file_mtime))) {
drop_get(
'/Private_Cache-Tests/UK_Prime_Ministers.csv',
local_file = store_fname,
overwrite = T,
dtoken = token
)
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <-
read.csv(sorted_files[length(sorted_files)])
} else {
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <-
read.csv(sorted_files[length(sorted_files)])
}
} else {
## first deploy, get file and import
drop_get(
'/Private_Cache-Tests/UK_Prime_Ministers.csv',
local_file = unique_name_fn(),
overwrite = T,
dtoken = token
)
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <-
read.csv(sorted_files[length(sorted_files)])
}
} else {
## if external file does not exist
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <- read.csv(sorted_files[length(sorted_files)])
}
head(data_to_use)
## Check file exists
if (drop_exists('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)) {
if (any(grepl(pattern = "user[_]downloaded", list.files()))) {
## there are updated files
## Get modification times for local and external file
all_local_files <-
c(original_file_name, list.files()[grepl(pattern = "user[_]downloaded", list.files())])
all_local_files_mtime <-
unlist(lapply(all_local_files, function(x)
file.mtime(x)))
remote_file_mtime <-
dmy_hms(drop_history('/Private_Cache-Tests/UK_Prime_Ministers.csv', dtoken = token)[1, modified])
if (!any(all_local_files_mtime > as.integer(remote_file_mtime))) {
drop_get(
'/Private_Cache-Tests/UK_Prime_Ministers.csv',
local_file = store_fname,
overwrite = T,
dtoken = token
)
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <-
read.csv(sorted_files[length(sorted_files)])
} else {
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <-
read.csv(sorted_files[length(sorted_files)])
}
} else {
## first deploy, get file and import
drop_get(
'/Private_Cache-Tests/UK_Prime_Ministers.csv',
local_file = unique_name_fn(),
overwrite = T,
dtoken = token
)
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <-
read.csv(sorted_files[length(sorted_files)])
}
} else {
## if external file does not exist
sorted_files <- sort_locals_by_date()
## Import most recently updated file
data_to_use <- read.csv(sorted_files[length(sorted_files)])
}
head(data_to_use)
sum(grepl(pattern = "user[_]downloaded", list.files()))
sort_locals_by_date()
grepl(pattern = "user[_]downloaded", sort_locals_by_date())
sorted_files <- sort_locals_by_date()
sorted_files[grepl(pattern = "user[_]downloaded", sorted_files)]
if(sum(grepl(pattern = "user[_]downloaded", list.files())) > 5) {
sorted_files <- sort_locals_by_date()
sorted_files <-
sorted_files[grepl(pattern = "user[_]downloaded", sorted_files)]
lapply(sorted_files[1:3], function(x)
file.remove(x))
}
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
library(shiny)
library(rsconnect)
deployApp(appDir = "unique-filename-shiny/", appName = "Dropbox_Cache_Example")
runApp('unique-filename-shiny')
deployApp(appDir = "unique-filename-shiny/", appName = "Dropbox_Cache_Example")
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('unique-filename-shiny')
runApp('Dropbox_Cache_Example')
runApp('Dropbox_Cache_Example')
library(rdrop2)
drop_exists(path = "https://www.dropbox.com/s/yht5dt4o3ec7rof/UK_Prime_Ministers.csv?dl=0")
drop_exists(path = "https://www.dropbox.com/s/yht5dt4o3ec7rof/UK_Prime_Ministers.csv")
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = "pms_data.csv", dtoken = token)
head(read.csv("https://www.dropbox.com/s/yht5dt4o3ec7rof/UK_Prime_Ministers.csv?dl=1))
head(read.csv("https://www.dropbox.com/s/yht5dt4o3ec7rof/UK_Prime_Ministers.csv?dl=1""))
head(read.csv("https://www.dropbox.com/s/yht5dt4o3ec7rof/UK_Prime_Ministers.csv?dl=1"))
head(read.csv("https://www.dropbox.com/s/yht5dt4o3ec7rof/UK_Prime_Ministers.csv?dl=1"))
drop_get('/Private_Cache-Tests/UK_Prime_Ministers.csv', local_file = "pms_data.csv", overwrite = TRUE, dtoken = token)
head(read.csv("pms_data.csv"))
runApp('Dropbox_Cache_Example')
source('~/.active-rstudio-document', echo=TRUE)
runApp('Dropbox_Cache_Example')
runApp('Dropbox_Cache_Example')
