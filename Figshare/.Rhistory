source('~/.active-rstudio-document', echo=TRUE)
setwd("~/Github/Live-Data_Scripts-and-Templates/Repositories/Figshare")
library(rfigshare)
token <- fs_auth()
token <- fs_auth()
token
token <- fs_auth()
saveRDS(token, "figsharetoken.rds")
token <- readRDS("figsharetoken.rds")
fs_auth(token = token)
fs_browse()
fs_browse(mine = TRUE)
fs_details(article_id = 3425729)
fs_details(article_id = 3425729)
my_deposits <- fs_browse()
fs_download(article_id = 3425729)
article_details <- fs_details(article_id = 3425729)
token <- fs_auth()
library(rfigshare)
token <- fs_auth()
my_deposits <- fs_browse()
fs_download(article_id = 3425729)
fs_details(article_id = 3425729)
article_details <- fs_details(article_id = 3425729)
class(article_details)
article_details$article_id
article_details$title
shiny::runApp('Figshare_Cache_Example')
runApp('Figshare_Cache_Example')
runApp('Figshare_Cache_Example')
runApp('Figshare_Cache_Example')
runApp('Figshare_Cache_Example')
runApp('Figshare_Cache_Example')
runApp('Figshare_Cache_Example')
runApp('Figshare_Cache_Example')
runApp('Figshare_Cache_Example')
runApp('Figshare_Cache_Example')
FigshareAuthCache
.FigshareAuthCache
token$credentials
token$app
token$params
token$private_key
token$init_credentials()
token$cache()
token$endpoint
token$credentials
fs_browse(mine = TRUE)
my_figshare_deposits <- fs_browse(mine = TRUE)
my_figshare_deposits <- fs_browse(mine = TRUE)
my_figshare_deposits
length(my_figshare_deposits)
my_figshare_deposits[1]
my_figshare_deposits[1]$article_id
my_figshare_deposits[[1]]$article_id
my_figshare_deposits[[2]]$article_id
my_figshare_deposits[[1]]$article_id
names(y_figshare_deposits[[1]])
names(my_figshare_deposits[[1]])
names(my_figshare_deposits[[1]])
names(my_figshare_deposits[[2]])
lapply(my_figshare_deposits, function(x)x[,c("article_id", "title","published_date")])
lapply(my_figshare_deposits, function(x){x[,c("article_id", "title","published_date")]})
lapply(my_figshare_deposits, function(x){x})
lapply(my_figshare_deposits, function(x){x[[1]]})
lapply(my_figshare_deposits, function(x){x[[c(1,2]]})
lapply(my_figshare_deposits, function(x){x[[c(1,2)]]})
lapply(my_figshare_deposits, function(x){x[c(1,2)]})
names(my_figshare_deposits[[1]])
lapply(my_figshare_deposits, function(x){
names(x)
})
lapply(my_figshare_deposits, function(x){
which(names(x) %in% c("article_id", "title","published_date"))
})
lapply(my_figshare_deposits, function(x){
col_indices <- which(names(x) %in% c("article_id", "title","published_date"))
x[col_indices]
})
my_figshare_deposits <- fs_browse(mine = TRUE)
length(my_figshare_deposits)
names(my_figshare_deposits[[1]])
which(names(my_figshare_deposits[[1]]))
lapply(my_figshare_deposits, function(x){x[,c("article_id", "title","published_date")]})
lapply(my_figshare_deposits, function(x){
col_indices <- which(names(x) %in% c("article_id", "title","published_date"))
x[col_indices]
})
extract_data <- lapply(my_figshare_deposits, function(x){
col_indices <- which(names(x) %in% c("article_id", "title","published_date"))
x[col_indices]
})
as.data.frame(extract_data)
lapply(my_figshare_deposits, function(x){
col_indices <- which(names(x) %in% c("article_id", "title","published_date"))
x[col_indices]
}) %>% as.data.frame()
article_details <- fs_details(article_id = 3425729)
article_details$title
article_details$files
fs_download(article_id = 3425729)
fs_download(article_id = 3425729, urls_only = FALSE)
setwd("~/Github/Live-Data_Scripts-and-Templates/Repositories/Figshare")
fs_download(article_id = 3425729, urls_only = FALSE)
article_details$files
as.data.frame(article_details$files)
article_details$files
article_details$files$size
article_details$files[[1]]
lapply(article_details$files,function(x){x$download_url})
article_details$files
lapply(article_details$files,function(x){x[,c("name","download_url")})
lapply(article_details$files,function(x){x[,c("name","download_url")]})
lapply(article_details$files,function(x){x[,c("name","download_url")]})
lapply(article_details$files,function(x){x[,c(1)]})
lapply(article_details$files,function(x){x[1]})
lapply(article_details$files,function(x){x[c(1,2)]})
lapply(article_details$files,function(x){x[c("name","download_url")]})
as.datatable(lapply(article_details$files,function(x){x[c("name","download_url")]}))
as.data.table(lapply(article_details$files,function(x){x[c("name","download_url")]}))
as.datatable(lapply(article_details$files,function(x){x[c("name","download_url")]}))
as.data.frame(lapply(article_details$files,function(x){x[c("name","download_url")]}))
download.file(url = "https://ndownloader.figshare.com/files/5360960", destfile = "desktop_items.csv")
knitr::kable(head(read.csv("desktop_items.csv")))
download.file(url = "https://ndownloader.figshafefefre.com/files/5360960", destfile = "desktop_items.csv")
fail_url <- download.file(url = "https://ndownloader.figshafefefre.com/files/5360960", destfile = "desktop_items.csv")
fail_url
try(download.file(url = "https://ndownloader.figshafefefre.com/files/5360960", destfile = "desktop_items.csv"))
fail_url <- try(download.file(url = "https://ndownloader.figshafefefre.com/files/5360960", destfile = "desktop_items.csv"))
fail_url
class(fail_url)
fail_url <- try(download.file(url = "https://ndownloader.figshare.com/files/5360960", destfile = "desktop_items.csv"))
class(fail_url)
download_try <- try(download.file(url = "https://ndownloader.figshare.com/files/5360960", destfile = "desktop_items.csv"))
if(class(download_try) == "test-error"){
"Download Failed"
}
download_try <- try(download.file(url = "https://ndownloader.figshtrgrtgare.com/files/5360960", destfile = "desktop_items.csv"))
if(class(download_try) == "test-error"){
"Download Failed"
}
class(download_try)
download_try <- try(download.file(url = "https://ndownloader.figshtrgrtgare.com/files/5360960", destfile = "desktop_items.csv",quiet = TRUE))
if(class(download_try) == "try-error"){
"Download Failed"
}
download_try <- try(download.file(url = "https://ndownloader.figshtrgrtgare.com/files/5360960", destfile = "desktop_items.csv"))
if(class(download_try) == "try-error"){
"Download Failed"
}
suppressWarnings(download_try <- try(download.file(url = "https://ndownloader.figshtrgrtgare.com/files/5360960", destfile = "desktop_items.csv"))
if(class(download_try) == "try-error"){
"Download Failed"
})
suppressWarnings({
download_try <- try(download.file(url = "https://ndownloader.figshtrgrtgare.com/files/5360960", destfile = "desktop_items.csv"))
if(class(download_try) == "try-error"){
"Download Failed"
}})
suppressWarnings({
download_try <- try(download.file(url = "https://ndownloader.figshare.com/files/non-existant-url", destfile = "desktop_items.csv"))
if(class(download_try) == "try-error"){
"Download Failed"
}})
suppressMessages({
download_try <- try(download.file(url = "https://ndownloader.figshare.com/files/non-existant-url", destfile = "desktop_items.csv"))
if(class(download_try) == "try-error"){
"Download Failed"
}})
suppressWarnings({
download_try <- try(download.file(url = "https://ndownloader.figshare.com/files/non-existant-url", destfile = "desktop_items.csv"))
if(class(download_try) == "try-error"){
"Download Failed"
}})
suppressWarnings({
download_try <- try(suppressWarnings(download.file(url = "https://ndownloader.figshare.com/files/non-existant-url", destfile = "desktop_items.csv")))
if(class(download_try) == "try-error"){
"Download Failed"
}})
Figshare provides a versioning system for deposits, the https://ndownloader.figshare.com/files/5360960 URL will always provide the most up-to-date version of the datafile - specific versions are
article_details$version
downloaded_version_number <- fs_details(article_id = 3425729)$version
write(downloaded_version_number, file file = "downloaded_version_number")
write(downloaded_version_number, file = "downloaded_version_number")
write(downloaded_version_number, file = "downloaded_version_number.txt")
internet_disconnection <- fs_details(article_id = 3425729)$version
internet_disconnection
external_version <- fs_details(article_id = target_article_id)$version
target_article_id <- 3425729
external_version <- fs_details(article_id = target_article_id)$version
local_version <- read.csv(file = "downloaded_version_number")
local_version
local_version <- read.csv(file = "downloaded_version_number.txt")
local_version
local_version <- read.table(file = "downloaded_version_number.txt")
local_version
local_version <- read.table(file = "downloaded_version_number.txt")[1]
local_version
local_version <- read.table(file = "downloaded_version_number.txt")[1,]
local_version
target_ndownloader_link <- "https://ndownloader.figshare.com/files/5360960"
unique_name_fn(type = "user_downloaded")
unique_name_fn <- function(type = NA){sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))), NA)}
unique_name_fn(type = "user_downloaded")
unique_name_fn <- function(type = NA){sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))), type)}
unique_name_fn(type = "user_downloaded")
unique_name_fn <- function(){sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))))}
unique_name_fn <- function(){sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))))}
unique_name_fn()
remove(unique_name_fn())
remove(unique_name_fn)
unique_name_fn <- function(){sprintf("%s_%s.csv", digest::digest(paste0(as.integer(Sys.time()),runif(1))))}
unique_name_fn()
unique_name_fn <- function(){digest::digest(paste0(as.integer(Sys.time()),runif(1)))}
unique_name_fn <- function(){digest::digest(paste0(as.integer(Sys.time()),runif(1)))}
unique_name_fn()
pasteunique_name_fn()
paste0(unique_name_fn(),"user_downloaded.csv")
paste0(unique_name_fn(),"_user_downloaded.csv")
paste0(unique_name_fn(),"_version_number.txt")
any(grepl(pattern = "user[_]downloaded", list.files()))
external_version <- fs_details(article_id = target_article_id)$version
local_version <- read.table(file = "downloaded_version_number.txt")[1,]
if(external_version > local_version){
f_name <- unique_name_fn()
download.file(url = "https://ndownloader.figshare.com/files/5360960",
destfile = paste0(f_name,"_user_downloaded.csv"))
write(external_version, file = paste0(f_name,"_version_number",external_version,".txt"))
}
if(external_version > local_version){
f_name <- unique_name_fn()
download.file(url = "https://ndownloader.figshare.com/files/5360960",
destfile = paste0(f_name,"_user_downloaded.csv"))
write(external_version, file = paste0(f_name,"_version_number_3",external_version,".txt"))
}
any(grepl(pattern = "user[_]downloaded", list.files()))
list.files()[grepl(pattern = "user[_]downloaded", list.files())]
list.files()[grepl(pattern = "user[_]downloaded", list.files())]
if(external_version > local_version){
f_name <- unique_name_fn()
download.file(url = "https://ndownloader.figshare.com/files/5360960",
destfile = paste0(f_name,"_user_downloaded.csv"))
write(external_version, file = paste0(f_name,"_version_number_3",external_version,".txt"))
}
list.files()[grepl(pattern = "user[_]downloaded", list.files())]
if(external_version > local_version){
f_name <- unique_name_fn()
download.file(url = "https://ndownloader.figshare.com/files/5360960",
destfile = paste0(f_name,"_user_downloaded.csv"))
write(external_version, file = paste0(f_name,"_version_number_",external_version,".txt"))
}
any(grepl(pattern = "user[_]downloaded", list.files()))
list.files()[grepl(pattern = "version[_]downloaded", list.files())]
list.files()[grepl(pattern = "version[_]number", list.files())]
list.files()[grepl(pattern = "version[_]number", list.files())]
target_article_id <- 3425729
target_ndownloader_link <- "https://ndownloader.figshare.com/files/5360960"
initial_version_number <- fs_details(article_id = target_article_id)$version
write(downloaded_version_number, file = "initial_version_number.txt")
unique_name_fn <- function(){digest::digest(paste0(as.integer(Sys.time()),runif(1)))}
if(external_version > local_version){
f_name <- unique_name_fn()
download.file(url = "https://ndownloader.figshare.com/files/5360960",
destfile = paste0(f_name,"_user_downloaded.csv"))
write(external_version, file = paste0(f_name,"_downloaded_version_number_",external_version,".txt"))
}
local_version
external_version
list.files()[grepl(pattern = "downloaded[_]version[_]number", list.files())]
user_downloaded_versions <- list.files()[grepl(pattern = "downloaded[_]version[_]number", list.files())]
lapply(user_downloaded_versions, function(x){read.table(x)})
lapply(user_downloaded_versions, function(x){read.table(x)[1,]})
as.vector(lapply(user_downloaded_versions, function(x){read.table(x)[1,]}))
unlist(lapply(user_downloaded_versions, function(x){read.table(x)[1,]}))
unlist(lapply(user_downloaded_versions, function(x){read.table(x)[1,]}))
user_downloaded_version <- unlist(lapply(user_downloaded_versions, function(x){read.table(x)[1,]}))
my_v <- c(4,10,2,5,11,3)
which.max(my_v)
my_v <- c(4,10,2,5,11,11,11,3)
which.max(my_v)
which.max(user_downloaded_version)
user_downloaded_version[which.max(user_downloaded_version)]
user_downloaded_version_files[which.max(user_downloaded_version)]
user_downloaded_version_files <- list.files()[grepl(pattern = "downloaded[_]version[_]number", list.files())]
user_downloaded_version <- unlist(lapply(user_downloaded_versions, function(x){read.table(x)[1,]}))
user_downloaded_version_files[which.max(user_downloaded_version)]
most_upto_date <- user_downloaded_version_files[which.max(user_downloaded_version)]
gsub( " .*$", "", most_upto_date)
gsub( "[_].*$", "", most_upto_date)
gsub( "[_].*$", "", user_downloaded_version_files[which.max(user_downloaded_version)])
most_upto_date <- gsub( "[_].*$", "", user_downloaded_version_files[which.max(user_downloaded_version)])
user_downloaded_files <- list.files()[grepl(pattern = "user[_]downloaded", list.files())]
user_downloaded_files
grepl(pattern = most_upto_date, x = user_downloaded_files)
user_downloaded_files[grepl(pattern = most_upto_date, x = user_downloaded_files)]
if(external_version > local_version){
f_name <- unique_name_fn()
download.file(url = "https://ndownloader.figshare.com/files/5360960",
destfile = paste0(f_name,"_user_downloaded.csv"))
write(external_version, file = paste0(f_name,"_downloaded_version_number_",external_version,".txt"))
}
any(grepl(pattern = "user[_]downloaded", list.files()))
library(rfigshare)
shiny::runApp('Figshare_Basic_Example')
